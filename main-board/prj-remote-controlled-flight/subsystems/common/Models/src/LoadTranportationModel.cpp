/**
  ******************************************************************************
  * @file    subsystems/subsys_ContinousContorl/MpcControle.h
  * @author  Richard Andrade
  * @version V1.0.0
  * @date    27-Julho-2015
  * @brief   Mathematic Model for Load Transportation.
  *****************************************************************************/

/* Includes ------------------------------------------------------------------*/
#include "LoadTranportationModel.h"
/* Private typedef -----------------------------------------------------------*/
/* Private define ------------------------------------------------------------*/
/* Private macro -------------------------------------------------------------*/
/* Private variables ---------------------------------------------------------*/


/* Exported functions definitions --------------------------------------------*/
namespace loadmodel {
/** \brief Função principal do módulo de RC.
  * @param  None
  * @retval None
  *
  * Interpreta o recebimento de PPM, calcula sinais de controle e os envia
  * via interface.
  * Devido as diferenças do modelo matematica com a construção mecanica o sinal do angulo do servo direito deve
  * ser adaptado.
  *
  */
LoadTranportationModel::LoadTranportationModel() {

}

LoadTranportationModel::~LoadTranportationModel() {
	// TODO Auto-generated destructor stub
}

Eigen::MatrixXf LoadTranportationModel::MatrixA(Eigen::MatrixXf as, float ts){
	/* Name spaces ------------------------------------------------------------------*/
	using namespace Eigen;
	MatrixXf A(20,20);
	MatrixXf Az(20,20);
	A.setZero();
	float ddxr, ddyr, ddzr;
	ddxr=as(0,0);
	ddyr=as(1,0);
	ddzr=as(2,0);
	A(0,10)=1.0;
	A(1,11)=1.0;
	A(2,12)=1.0;
	A(3,13)=1.0;
	A(4,14)=1.0;
	A(5,15)=1.0;
	A(6,16)=1.0;
	A(7,17)=1.0;
	A(8,18)=1.0;
	A(9,19)=1.0;
	A(10,3)=- 0.000012592*ddxr - 0.14017*ddyr - 0.00048325*ddzr - 0.0048743;
	A(10,4)=0.00014863*ddxr + 0.0026429*ddyr + 0.99594*ddzr + 9.7702;
	A(10,5)=- 0.000025938*ddxr - 0.29037*ddyr;
	A(10,6)=0.00016012*ddxr + 0.66961*ddyr + 0.67318*ddzr + 6.6039;
	A(10,7)=0.000040504*ddxr - 0.67799*ddyr + 0.67829*ddzr + 6.654;
	A(10,8)=1.3667e-8*ddxr + 0.00015429*ddyr - 7.7532e-7*ddzr - 7.6059e-6;
	A(10,9)=0.00018533*ddyr - 4.9294e-6*ddxr - 0.033194*ddzr - 0.32563;
	A(11,3)=0.0065328*ddyr - 0.00014755*ddxr - 0.9942*ddzr - 9.7532;
	A(11,4)=5.774e-6*ddxr + 0.064527*ddyr + 0.000067694*ddzr + 0.00066408;
	A(11,5)=3.7138e-7*ddxr + 0.0041577*ddyr + 1.3418e-9*ddzr;
	A(11,6)=- 4.6995e-6*ddxr - 0.019607*ddyr - 0.019786*ddzr - 0.1941;
	A(11,7)=1.1454e-6*ddxr - 0.018986*ddyr + 0.019069*ddzr + 0.18707;
	A(11,8)=4.6276e-6*ddxr - 0.00018081*ddyr + 0.031166*ddzr + 0.30574;
	A(11,9)=1.9996e-10*ddxr - 3.554e-6*ddyr + 3.4726e-6*ddzr + 0.000034066;
	A(12,3)=0.000022423*ddxr + 0.25078*ddyr + 0.00014735*ddzr + 0.0014137;
	A(12,4)=0.000012788*ddxr - 0.0048223*ddyr + 0.088718*ddzr + 0.87032;
	A(12,6)=- 1.3592e-6*ddxr - 0.0056894*ddyr - 0.0057115*ddzr - 0.056029;
	A(12,7)=0.0049963*ddyr - 2.9794e-7*ddxr - 0.0049949*ddzr - 0.049;
	A(12,8)=6.6579e-7*ddxr + 0.0074733*ddyr - 0.000011817*ddzr - 0.00011592;
	A(12,9)=- 1.0423e-7*ddxr - 0.00012564*ddyr - 0.00062423*ddzr - 0.0061237;
	A(13,3)=2.5161e-6*ddxr - 0.016569*ddyr + 0.02682*ddzr + 0.26308;
	A(13,4)=0.0026041*ddzr - 1.9647*ddyr - 0.00017511*ddxr + 0.025546;
	A(13,6)=- 0.00007699*ddxr - 0.32418*ddyr - 0.32237*ddzr - 3.1624;
	A(13,7)=0.000021487*ddxr - 0.36846*ddyr + 0.3651*ddzr + 3.5816;
	A(13,8)=0.00030184*ddyr - 2.6103e-6*ddxr - 0.017699*ddzr - 0.17363;
	A(13,9)=0.000019292*ddyr - 5.0835e-8*ddxr - 0.00035274*ddzr - 0.0034603;
	A(14,3)=- 0.00067939*ddxr - 7.5819*ddyr - 0.014333*ddzr - 0.14771;
	A(14,4)=0.000034033*ddxr + 0.053084*ddyr + 0.19658*ddzr + 1.9285;
	A(14,6)=0.0020498*ddxr + 8.5715*ddyr + 8.6182*ddzr + 84.545;
	A(14,7)=0.00051612*ddxr - 8.6368*ddyr + 8.6416*ddzr + 84.774;
	A(14,8)=6.9351e-7*ddxr + 0.0082012*ddyr - 0.0002622*ddzr - 0.0025722;
	A(14,9)=0.0006426*ddyr - 0.000020667*ddxr - 0.13909*ddzr - 1.3644;
	A(15,3)=0.000063296*ddxr + 0.085227*ddyr + 0.37371*ddzr + 3.6661;
	A(15,4)=- 0.00099395*ddxr - 11.086*ddyr - 0.024924*ddzr - 0.2445;
	A(15,6)=0.0013204*ddxr + 5.5206*ddyr + 5.5523*ddzr + 54.468;
	A(15,7)=5.5612*ddyr - 0.00033257*ddxr - 5.5659*ddzr - 54.602;
	A(15,8)=0.000065924*ddyr - 1.0894e-6*ddxr - 0.0073512*ddzr - 0.072115;
	A(15,9)=1.9148e-7*ddxr + 0.00069116*ddyr + 0.00087077*ddzr + 0.0085422;
	A(16,3)=0.00079086*ddxr + 8.7756*ddyr + 0.046776*ddzr + 0.46595;
	A(16,4)=- 0.00012034*ddxr - 1.0169*ddyr - 0.198*ddzr - 1.9424;
	A(16,6)=- 0.0019272*ddxr - 8.059*ddyr - 8.1028*ddzr - 79.488;
	A(16,7)=9.0877*ddyr - 0.00054308*ddxr - 9.0928*ddzr - 89.201;
	A(16,8)=- 7.8562e-7*ddxr - 0.0081644*ddyr - 0.00037805*ddzr - 0.0037087;
	A(16,9)=0.000020605*ddxr - 0.00058007*ddyr + 0.13863*ddzr + 1.36;
	A(17,3)=0.00078305*ddxr + 8.7969*ddyr - 0.018366*ddzr - 0.1731;
	A(17,4)=0.000052921*ddxr + 0.91548*ddyr - 0.19365*ddzr - 1.8998;
	A(17,6)=- 0.0021573*ddxr - 9.021*ddyr - 9.0703*ddzr - 88.98;
	A(17,7)=8.118*ddyr - 0.00048509*ddxr - 8.1224*ddzr - 79.68;
	A(17,8)=0.00090334*ddzr - 0.0081757*ddyr - 5.957e-7*ddxr + 0.0088618;
	A(17,9)=0.000020571*ddxr - 0.00070052*ddyr + 0.13848*ddzr + 1.3585;
	A(18,3)=0.032324*ddyr - 2.8355e-6*ddxr - 0.038408*ddzr - 0.37676;
	A(18,4)=0.000052988*ddxr + 0.59776*ddyr - 0.0027361*ddzr - 0.026842;
	A(18,6)=0.000086418*ddxr + 0.36351*ddyr + 0.36206*ddzr + 3.5518;
	A(18,7)=0.4063*ddyr - 0.00002377*ddxr - 0.4031*ddzr - 3.9544;
	A(18,8)=0.011409*ddyr - 0.0003059*ddxr - 2.0599*ddzr - 20.207;
	A(18,9)=0.00030991*ddzr - 1.238*ddyr - 0.00011054*ddxr + 0.0030402;
	A(19,3)=0.00076024*ddxr + 8.4885*ddyr + 0.0134*ddzr + 0.13829;
	A(19,4)=- 0.000031381*ddxr - 0.035789*ddyr - 0.18916*ddzr - 1.8556;
	A(19,6)=- 0.0017296*ddxr - 7.2326*ddyr - 7.2722*ddzr - 71.34;
	A(19,7)=7.2811*ddyr - 0.00043513*ddxr - 7.2853*ddzr - 71.468;
	A(19,8)=0.000025935*ddxr + 0.28991*ddyr + 0.00025988*ddzr + 0.0025495;
	A(19,9)=0.0097571*ddyr - 0.00028392*ddxr - 1.9113*ddzr - 18.75;
	Az=MatrixXf::Identity(20,20)+A*ts;
	return Az;
}
Eigen::MatrixXf LoadTranportationModel::MatrixB(float ts){
	/* Name spaces ------------------------------------------------------------------*/
	using namespace Eigen;
	MatrixXf B(20,4);
	B.setZero();
	B(10,0)=2.47836E-06;
	B(10,1)=-2.48955E-06;
	B(10,2)=-2.77327E-03;
	B(10,3)=-2.77015E-03;
	B(11,0)=1.73090E-04;
	B(11,1)=-1.73871E-04;
	B(11,2)=-6.65205E-06;
	B(11,3)=2.02456E-05;
	B(12,0)=5.92473E-04;
	B(12,1)=5.99029E-04;
	B(12,2)=-6.61069E-04;
	B(12,3)=-6.61191E-04;
	B(13,0)=-6.38057E-03;
	B(13,1)=6.40938E-03;
	B(13,2)=-2.09190E-04;
	B(13,3)=-5.85615E-04;
	B(14,0)=1.24260E-04;
	B(14,1)=-1.24821E-04;
	B(14,2)=-1.47316E-01;
	B(14,3)=-1.47293E-01;
	B(15,0)=-7.37925E-04;
	B(15,1)=7.41257E-04;
	B(15,2)=2.26476E-03;
	B(15,3)=-2.06608E-03;
	B(16,0)=-1.87959E-04;
	B(16,1)=1.88807E-04;
	B(16,2)=1.32860E+01;
	B(16,3)=1.46555E-01;
	B(17,0)=-5.93257E-05;
	B(17,1)=5.95935E-05;
	B(17,2)=1.46555E-01;
	B(17,3)=1.32860E+01;
	B(18,0)=6.03447E-03;
	B(18,1)=-6.06171E-03;
	B(18,2)=2.20018E-04;
	B(18,3)=5.42659E-04;
	B(19,0)=-1.19200E-04;
	B(19,1)=1.19738E-04;
	B(19,2)=1.41771E-01;
	B(19,3)=1.41753E-01;
	return B*ts;
}
Eigen::MatrixXf LoadTranportationModel::MatrixC(){
	/* Name spaces ------------------------------------------------------------------*/
	using namespace Eigen;
	MatrixXf C(20,20);
	C.setIdentity();
	return C;
}
Eigen::MatrixXf LoadTranportationModel::MatrixSumRho(){
	using namespace Eigen;
	VectorXf Rho(20);
	Rho<<5,6,7,3.03964,4.05285,5.06606,1.01321,1.01321,5.06606,5.06606,2.5E-01,2.5E-01,2.5E-01,1.12579E-02,
			1.12579E-02,1.12579E-02,1.01321E-03,1.01321E-03,2.53303E-01,2.53303E-01;
	return Rho.asDiagonal();
}
Eigen::MatrixXf LoadTranportationModel::MatrixSumLambda(){
	using namespace Eigen;
	Vector4f Lambda;
	Lambda<<2.19609E-08,2.17214E-08,2.50000E-07,2.50000E-07;
	return Lambda.asDiagonal();
}
Eigen::MatrixXf LoadTranportationModel::RefrenceControl(Eigen::MatrixXf as){
	using namespace Eigen;
	float ddxr, ddyr, ddzr;
	ddxr=as(0,0);
	ddyr=as(1,0);
	ddzr=as(2,0);
	MatrixXf ur(4,1);
	float fR=8251.95 + 0.200079*ddxr + 836.746*ddyr + 841.177*ddzr;
	float fL=8214.86 + 0.0500026*ddxr - 837.057*ddyr + 837.396*ddzr;
	float tauR=0;
	float tauL=0;
	ur<<fR,fL,tauR,tauL;
	return ur;

}
Eigen::MatrixXf LoadTranportationModel::MatrixTerminalCost(){
	/* Name spaces ------------------------------------------------------------------*/
	using namespace Eigen;
	MatrixXf P(20,20);
	P.setZero();
	P(0,0)=1.37346E+03;
	P(0,1)=-1.10809E+00;
	P(0,2)=-7.49975E-01;
	P(0,3)=4.39909E+00;
	P(0,4)=1.47380E+03;
	P(0,5)=-1.69509E+01;
	P(0,6)=5.89290E+01;
	P(0,7)=7.32693E+01;
	P(0,8)=2.24962E-01;
	P(0,9)=9.87743E+02;
	P(0,10)=7.14763E+02;
	P(0,11)=-1.15444E+00;
	P(0,12)=-1.52033E+00;
	P(0,13)=7.55038E-01;
	P(0,14)=1.59001E+01;
	P(0,15)=-2.24516E+00;
	P(0,16)=2.03851E-01;
	P(0,17)=2.52788E-01;
	P(0,18)=9.13187E-01;
	P(0,19)=4.32233E+01;
	P(1,0)=-1.10809E+00;
	P(1,1)=1.89895E+03;
	P(1,2)=3.06053E-01;
	P(1,3)=-2.77065E+03;
	P(1,4)=-4.45057E+00;
	P(1,5)=3.21373E+01;
	P(1,6)=1.43497E+00;
	P(1,7)=-3.37530E+00;
	P(1,8)=-1.46317E+03;
	P(1,9)=2.97236E-01;
	P(1,10)=-1.09776E+00;
	P(1,11)=1.09825E+03;
	P(1,12)=8.49968E-02;
	P(1,13)=-1.80965E+02;
	P(1,14)=-7.58631E-01;
	P(1,15)=8.06257E+00;
	P(1,16)=6.95836E-03;
	P(1,17)=-2.43387E-02;
	P(1,18)=-1.82235E+02;
	P(1,19)=-5.48297E-01;
	P(2,0)=-7.49975E-01;
	P(2,1)=3.06053E-01;
	P(2,2)=7.24947E+02;
	P(2,3)=-1.11011E+00;
	P(2,4)=1.22119E+01;
	P(2,5)=-1.26966E-01;
	P(2,6)=6.51861E-01;
	P(2,7)=7.53816E-01;
	P(2,8)=-4.84319E-02;
	P(2,9)=3.41487E+00;
	P(2,10)=1.35050E-01;
	P(2,11)=2.72268E-01;
	P(2,12)=1.42674E+02;
	P(2,13)=-2.22350E-01;
	P(2,14)=-1.60979E-01;
	P(2,15)=-1.63813E-02;
	P(2,16)=1.63955E-02;
	P(2,17)=1.65696E-02;
	P(2,18)=-6.54954E-02;
	P(2,19)=-7.59783E-01;
	P(3,0)=4.39909E+00;
	P(3,1)=-2.77065E+03;
	P(3,2)=-1.11011E+00;
	P(3,3)=5.93289E+03;
	P(3,4)=1.30191E+01;
	P(3,5)=-7.13641E+01;
	P(3,6)=-3.82083E+00;
	P(3,7)=8.92851E+00;
	P(3,8)=2.95564E+03;
	P(3,9)=5.77004E-01;
	P(3,10)=3.68924E+00;
	P(3,11)=-2.00413E+03;
	P(3,12)=-3.02053E-01;
	P(3,13)=5.32987E+02;
	P(3,14)=1.90063E+00;
	P(3,15)=-1.75785E+01;
	P(3,16)=-1.91832E-02;
	P(3,17)=6.36982E-02;
	P(3,18)=5.28741E+02;
	P(3,19)=1.41201E+00;
	P(4,0)=1.47380E+03;
	P(4,1)=-4.45057E+00;
	P(4,2)=1.22119E+01;
	P(4,3)=1.30191E+01;
	P(4,4)=2.65072E+03;
	P(4,5)=-3.57213E+01;
	P(4,6)=1.08798E+02;
	P(4,7)=1.37735E+02;
	P(4,8)=1.77862E+00;
	P(4,9)=1.69754E+03;
	P(4,10)=1.00950E+03;
	P(4,11)=-3.83018E+00;
	P(4,12)=2.32468E+00;
	P(4,13)=1.99263E+00;
	P(4,14)=1.29892E+02;
	P(4,15)=-4.67055E+00;
	P(4,16)=4.57084E-01;
	P(4,17)=5.63754E-01;
	P(4,18)=2.10136E+00;
	P(4,19)=1.70810E+02;
	P(5,0)=-1.69509E+01;
	P(5,1)=3.21373E+01;
	P(5,2)=-1.26966E-01;
	P(5,3)=-7.13641E+01;
	P(5,4)=-3.57213E+01;
	P(5,5)=1.45919E+02;
	P(5,6)=1.33219E+01;
	P(5,7)=-2.51854E+01;
	P(5,8)=-2.94711E+01;
	P(5,9)=-1.34974E+01;
	P(5,10)=-1.21640E+01;
	P(5,11)=2.38818E+01;
	P(5,12)=-2.61660E-02;
	P(5,13)=-8.22351E+00;
	P(5,14)=-3.41796E+00;
	P(5,15)=1.18527E+01;
	P(5,16)=8.71999E-02;
	P(5,17)=-1.77792E-01;
	P(5,18)=-7.21809E+00;
	P(5,19)=-2.92715E+00;
	P(6,0)=5.89290E+01;
	P(6,1)=1.43497E+00;
	P(6,2)=6.51861E-01;
	P(6,3)=-3.82083E+00;
	P(6,4)=1.08798E+02;
	P(6,5)=1.33219E+01;
	P(6,6)=1.46915E+01;
	P(6,7)=4.83592E+00;
	P(6,8)=-7.40380E-01;
	P(6,9)=5.41282E+01;
	P(6,10)=4.02329E+01;
	P(6,11)=1.22696E+00;
	P(6,12)=1.32557E-01;
	P(6,13)=-6.74225E-01;
	P(6,14)=7.78188E+00;
	P(6,15)=1.63958E+00;
	P(6,16)=1.02686E-01;
	P(6,17)=2.18378E-02;
	P(6,18)=-4.52479E-01;
	P(6,19)=8.35132E+00;
	P(7,0)=7.32693E+01;
	P(7,1)=-3.37530E+00;
	P(7,2)=7.53816E-01;
	P(7,3)=8.92851E+00;
	P(7,4)=1.37735E+02;
	P(7,5)=-2.51854E+01;
	P(7,6)=4.83592E+00;
	P(7,7)=2.52232E+01;
	P(7,8)=1.72360E+00;
	P(7,9)=6.61018E+01;
	P(7,10)=5.03426E+01;
	P(7,11)=-2.83214E+00;
	P(7,12)=1.51716E-01;
	P(7,13)=1.48434E+00;
	P(7,14)=1.03806E+01;
	P(7,15)=-3.28140E+00;
	P(7,16)=3.34668E-02;
	P(7,17)=1.73379E-01;
	P(7,18)=1.08050E+00;
	P(7,19)=1.06088E+01;
	P(8,0)=2.24962E-01;
	P(8,1)=-1.46317E+03;
	P(8,2)=-4.84319E-02;
	P(8,3)=2.95564E+03;
	P(8,4)=1.77862E+00;
	P(8,5)=-2.94711E+01;
	P(8,6)=-7.40380E-01;
	P(8,7)=1.72360E+00;
	P(8,8)=1.86493E+03;
	P(8,9)=-9.65714E-01;
	P(8,10)=3.36703E-01;
	P(8,11)=-1.04109E+03;
	P(8,12)=-2.42447E-02;
	P(8,13)=2.04118E+02;
	P(8,14)=4.13899E-01;
	P(8,15)=-7.60230E+00;
	P(8,16)=-2.51374E-03;
	P(8,17)=1.20015E-02;
	P(8,18)=2.11982E+02;
	P(8,19)=2.61299E-01;
	P(9,0)=9.87743E+02;
	P(9,1)=2.97236E-01;
	P(9,2)=3.41487E+00;
	P(9,3)=5.77004E-01;
	P(9,4)=1.69754E+03;
	P(9,5)=-1.34974E+01;
	P(9,6)=5.41282E+01;
	P(9,7)=6.61018E+01;
	P(9,8)=-9.65714E-01;
	P(9,9)=1.26969E+03;
	P(9,10)=6.68527E+02;
	P(9,11)=-6.73115E-03;
	P(9,12)=3.44684E-01;
	P(9,13)=2.41065E-01;
	P(9,14)=5.47019E+01;
	P(9,15)=-1.79345E+00;
	P(9,16)=1.16622E-01;
	P(9,17)=1.53419E-01;
	P(9,18)=5.41369E-01;
	P(9,19)=8.82170E+01;
	P(10,0)=7.14763E+02;
	P(10,1)=-1.09776E+00;
	P(10,2)=1.35050E-01;
	P(10,3)=3.68924E+00;
	P(10,4)=1.00950E+03;
	P(10,5)=-1.21640E+01;
	P(10,6)=4.02329E+01;
	P(10,7)=5.03426E+01;
	P(10,8)=3.36703E-01;
	P(10,9)=6.68527E+02;
	P(10,10)=4.51896E+02;
	P(10,11)=-1.01607E+00;
	P(10,12)=-1.10037E+00;
	P(10,13)=5.94300E-01;
	P(10,14)=2.48711E+01;
	P(10,15)=-1.59896E+00;
	P(10,16)=1.45151E-01;
	P(10,17)=1.80517E-01;
	P(10,18)=6.85984E-01;
	P(10,19)=4.28464E+01;
	P(11,0)=-1.15444E+00;
	P(11,1)=1.09825E+03;
	P(11,2)=2.72268E-01;
	P(11,3)=-2.00413E+03;
	P(11,4)=-3.83018E+00;
	P(11,5)=2.38818E+01;
	P(11,6)=1.22696E+00;
	P(11,7)=-2.83214E+00;
	P(11,8)=-1.04109E+03;
	P(11,9)=-6.73115E-03;
	P(11,10)=-1.01607E+00;
	P(11,11)=7.45752E+02;
	P(11,12)=7.48844E-02;
	P(11,13)=-1.50704E+02;
	P(11,14)=-5.98906E-01;
	P(11,15)=5.94083E+00;
	P(11,16)=6.26807E-03;
	P(11,17)=-2.04259E-02;
	P(11,18)=-1.50857E+02;
	P(11,19)=-4.37066E-01;
	P(12,0)=-1.52033E+00;
	P(12,1)=8.49968E-02;
	P(12,2)=1.42674E+02;
	P(12,3)=-3.02053E-01;
	P(12,4)=2.32468E+00;
	P(12,5)=-2.61660E-02;
	P(12,6)=1.32557E-01;
	P(12,7)=1.51716E-01;
	P(12,8)=-2.42447E-02;
	P(12,9)=3.44684E-01;
	P(12,10)=-1.10037E+00;
	P(12,11)=7.48844E-02;
	P(12,12)=4.50081E+01;
	P(12,13)=-6.65997E-02;
	P(12,14)=-1.57164E-02;
	P(12,15)=-3.47573E-03;
	P(12,16)=5.11099E-03;
	P(12,17)=5.13070E-03;
	P(12,18)=-1.66775E-02;
	P(12,19)=-2.54793E-01;
	P(13,0)=7.55038E-01;
	P(13,1)=-1.80965E+02;
	P(13,2)=-2.22350E-01;
	P(13,3)=5.32987E+02;
	P(13,4)=1.99263E+00;
	P(13,5)=-8.22351E+00;
	P(13,6)=-6.74225E-01;
	P(13,7)=1.48434E+00;
	P(13,8)=2.04118E+02;
	P(13,9)=2.41065E-01;
	P(13,10)=5.94300E-01;
	P(13,11)=-1.50704E+02;
	P(13,12)=-6.65997E-02;
	P(13,13)=7.60122E+01;
	P(13,14)=2.51231E-01;
	P(13,15)=-1.94674E+00;
	P(13,16)=-3.80465E-03;
	P(13,17)=1.07820E-02;
	P(13,18)=7.42789E+01;
	P(13,19)=1.79786E-01;
	P(14,0)=1.59001E+01;
	P(14,1)=-7.58631E-01;
	P(14,2)=-1.60979E-01;
	P(14,3)=1.90063E+00;
	P(14,4)=1.29892E+02;
	P(14,5)=-3.41796E+00;
	P(14,6)=7.78188E+00;
	P(14,7)=1.03806E+01;
	P(14,8)=4.13899E-01;
	P(14,9)=5.47019E+01;
	P(14,10)=2.48711E+01;
	P(14,11)=-5.98906E-01;
	P(14,12)=-1.57164E-02;
	P(14,13)=2.51231E-01;
	P(14,14)=2.62698E+01;
	P(14,15)=-4.38687E-01;
	P(14,16)=4.30402E-02;
	P(14,17)=5.41324E-02;
	P(14,18)=2.31182E-01;
	P(14,19)=2.80505E+01;
	P(15,0)=-2.24516E+00;
	P(15,1)=8.06257E+00;
	P(15,2)=-1.63813E-02;
	P(15,3)=-1.75785E+01;
	P(15,4)=-4.67055E+00;
	P(15,5)=1.18527E+01;
	P(15,6)=1.63958E+00;
	P(15,7)=-3.28140E+00;
	P(15,8)=-7.60230E+00;
	P(15,9)=-1.79345E+00;
	P(15,10)=-1.59896E+00;
	P(15,11)=5.94083E+00;
	P(15,12)=-3.47573E-03;
	P(15,13)=-1.94674E+00;
	P(15,14)=-4.38687E-01;
	P(15,15)=1.43213E+00;
	P(15,16)=1.17877E-02;
	P(15,17)=-2.45196E-02;
	P(15,18)=-1.81153E+00;
	P(15,19)=-3.71126E-01;
	P(16,0)=2.03851E-01;
	P(16,1)=6.95836E-03;
	P(16,2)=1.63955E-02;
	P(16,3)=-1.91832E-02;
	P(16,4)=4.57084E-01;
	P(16,5)=8.71999E-02;
	P(16,6)=1.02686E-01;
	P(16,7)=3.34668E-02;
	P(16,8)=-2.51374E-03;
	P(16,9)=1.16622E-01;
	P(16,10)=1.45151E-01;
	P(16,11)=6.26807E-03;
	P(16,12)=5.11099E-03;
	P(16,13)=-3.80465E-03;
	P(16,14)=4.30402E-02;
	P(16,15)=1.17877E-02;
	P(16,16)=1.81249E-03;
	P(16,17)=1.28099E-04;
	P(16,18)=-2.42512E-03;
	P(16,19)=3.27925E-02;
	P(17,0)=2.52788E-01;
	P(17,1)=-2.43387E-02;
	P(17,2)=1.65696E-02;
	P(17,3)=6.36982E-02;
	P(17,4)=5.63754E-01;
	P(17,5)=-1.77792E-01;
	P(17,6)=2.18378E-02;
	P(17,7)=1.73379E-01;
	P(17,8)=1.20015E-02;
	P(17,9)=1.53419E-01;
	P(17,10)=1.80517E-01;
	P(17,11)=-2.04259E-02;
	P(17,12)=5.13070E-03;
	P(17,13)=1.07820E-02;
	P(17,14)=5.41324E-02;
	P(17,15)=-2.45196E-02;
	P(17,16)=1.28099E-04;
	P(17,17)=3.73669E-03;
	P(17,18)=7.52587E-03;
	P(17,19)=4.11240E-02;
	P(18,0)=9.13187E-01;
	P(18,1)=-1.82235E+02;
	P(18,2)=-6.54954E-02;
	P(18,3)=5.28741E+02;
	P(18,4)=2.10136E+00;
	P(18,5)=-7.21809E+00;
	P(18,6)=-4.52479E-01;
	P(18,7)=1.08050E+00;
	P(18,8)=2.11982E+02;
	P(18,9)=5.41369E-01;
	P(18,10)=6.85984E-01;
	P(18,11)=-1.50857E+02;
	P(18,12)=-1.66775E-02;
	P(18,13)=7.42789E+01;
	P(18,14)=2.31182E-01;
	P(18,15)=-1.81153E+00;
	P(18,16)=-2.42512E-03;
	P(18,17)=7.52587E-03;
	P(18,18)=7.41603E+01;
	P(18,19)=1.91081E-01;
	P(19,0)=4.32233E+01;
	P(19,1)=-5.48297E-01;
	P(19,2)=-7.59783E-01;
	P(19,3)=1.41201E+00;
	P(19,4)=1.70810E+02;
	P(19,5)=-2.92715E+00;
	P(19,6)=8.35132E+00;
	P(19,7)=1.06088E+01;
	P(19,8)=2.61299E-01;
	P(19,9)=8.82170E+01;
	P(19,10)=4.28464E+01;
	P(19,11)=-4.37066E-01;
	P(19,12)=-2.54793E-01;
	P(19,13)=1.79786E-01;
	P(19,14)=2.80505E+01;
	P(19,15)=-3.71126E-01;
	P(19,16)=3.27925E-02;
	P(19,17)=4.11240E-02;
	P(19,18)=1.91081E-01;
	P(19,19)=3.14052E+01;
	return P;
}
Eigen::VectorXf LoadTranportationModel::OutputMaxVector(){
	using namespace Eigen;
	VectorXf ymax(20,1);
	ymax<< 0.6,0.6,6,0.5,0.5,0.5,0.5,0.5,0.5,0.5,20,20,20,20,20,20,20,20,20,20;
	return ymax;
}
Eigen::VectorXf LoadTranportationModel::OutputMinVector(){
	using namespace Eigen;
	VectorXf ymin(20,1);
	ymin<< -0.6,-0.6,0,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-0.5,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20;
	return ymin;
}
Eigen::VectorXf LoadTranportationModel::ControlMaxVector(){
	using namespace Eigen;
	VectorXf umax(4,1);
	umax<< 15000,15000,2000,2000;
	return umax;
}
Eigen::VectorXf LoadTranportationModel::ControlMinVector(){
	using namespace Eigen;
	VectorXf umin(4,1);
	umin<< 0,0,-2000,-2000;
	return umin;
}
/* Private functions ---------------------------------------------------------*/
} /* namespace loadmodel */
